# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-13 17:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('staff', '0008_auto_20160822_1623'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('x', 'Nicht anwesend'), ('a', 'Anwesend'), ('e', 'Entschuldigt')], default='x', max_length=1, verbose_name='Status')),
                ('comment', models.TextField(verbose_name='Kommentar')),
            ],
            options={
                'ordering': ['event', 'person'],
                'verbose_name': 'Anwesenheit',
                'verbose_name_plural': 'Anwesenheiten',
            },
        ),
        migrations.CreateModel(
            name='AttendanceEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('begin', models.DateTimeField(verbose_name='Beginn')),
                ('end', models.DateTimeField(verbose_name='Ende')),
            ],
            options={
                'ordering': ['begin'],
                'verbose_name': 'Anwesenheitstermin',
                'verbose_name_plural': 'Anwesenheitstermine',
            },
        ),
        migrations.CreateModel(
            name='StaffFilterGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_tutor', models.BooleanField(default=False, help_text='Soll der Filter auf Tutoren zutreffen', verbose_name='Tutor?')),
                ('is_orga', models.BooleanField(default=False, help_text='Soll der Filter auf Orgas zutreffen', verbose_name='Orga?')),
                ('is_helper', models.BooleanField(default=False, help_text='Soll der Filter auf Helfer zutreffen', verbose_name='Helfer?')),
                ('tutor_for_all', models.BooleanField(default=False, help_text='Soll der Filter auf alle Tutorengruppen zutreffen (sonst spezifizieren). Nur relevant, wenn Tutoren ausgewählt wurden.', verbose_name='Alle Tutorenkategorien?')),
                ('tutor_for', models.ManyToManyField(blank=True, help_text='Welche Tutorengruppen sollen einbezogen werden?', to='staff.GroupCategory', verbose_name='Tutor für')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Staff Filter Gruppe',
                'verbose_name_plural': 'Staff Filter Gruppen',
            },
        ),
        migrations.AddField(
            model_name='attendanceevent',
            name='required_for',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.StaffFilterGroup', verbose_name='Filterkriterium: Wer muss anwesend sein?'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.AttendanceEvent', verbose_name='Anwesenheitstermin'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.Person', verbose_name='Person'),
        ),
    ]
